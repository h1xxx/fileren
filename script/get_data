#!/bin/bash
set -euo pipefail

LIST_DIR=/usr/share/seclists

cd "$(dirname "$0")"
mkdir -p ../data


# ssh brute force files
# ---------------------

# usernames
grep -v -e '^pi$' -e '^root$' \
  "${LIST_DIR}/Usernames/top-usernames-shortlist.txt" > ../data/ssh_user

# passwords for root test - part 1
head -n 300 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-10000.txt" \
  > ../data/ssh_root_pass_1

# passwords for root test - part 2
head -n 1000 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-10000.txt" \
  | grep -vxFf ../data/ssh_root_pass_1 \
  > ../data/ssh_root_pass_2

# passwords for root test - part 3
head -n 2000 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-10000.txt" \
  | grep -vxFf ../data/ssh_root_pass_1 \
  | grep -vxFf ../data/ssh_root_pass_2 \
  > ../data/ssh_root_pass_3

# passwords for user test - part 1
head -n 30 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-1000.txt" \
  > ../data/ssh_user_pass_1

# passwords for user test - part 2
head -n 100 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-1000.txt" \
  | grep -vxFf ../data/ssh_user_pass_1 \
  > ../data/ssh_user_pass_2

# passwords for user test - part 3
head -n 200 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-1000.txt" \
  | grep -vxFf ../data/ssh_user_pass_1 \
  | grep -vxFf ../data/ssh_user_pass_2 \
  > ../data/ssh_user_pass_3


# ftp brute force files
# ---------------------

# usernames
grep -v -e '^pi$' \
  "${LIST_DIR}/Usernames/top-usernames-shortlist.txt" > ../data/ftp_user

# passwords - part 1
head -n 500 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-10000.txt" \
  > ../data/ftp_pass_1

# passwords - part 2
head -n 1500 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-10000.txt" \
  | grep -vxFf ../data/ftp_pass_1 \
  > ../data/ftp_pass_2

# passwords - part 3
head -n 4000 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-10000.txt" \
  | grep -vxFf ../data/ftp_pass_1 \
  | grep -vxFf ../data/ftp_pass_2 \
  > ../data/ftp_pass_3


# http
# ----

# user-agents
l=https://raw.githubusercontent.com/Kikobeats/top-user-agents/master/index.json
curl -s ${l} | grep M | cut -d'"' -f2 > ../data/http_user-agent

# common www files and dirs
d=/usr/share/seclists/Discovery/Web-Content
cat ${d}/raft-small-files.txt \
  ${d}/common.txt \
  ${d}/Common-DB-Backups.txt \
  ${d}/Logins.fuzz.txt \
  ${d}/PHP.fuzz.txt \
  ${d}/Passwords.fuzz.txt \
  ${d}/common-api-endpoints-mazen160.txt \
  ${d}/nginx.txt \
  ${d}/proxy-conf.fuzz.txt \
  | sed 's|^/||' \
  | sed '/^\//d' \
  | sed 's|/$||' \
  | sed '/\/$/d' \
  | sed '/ /d' \
  | sed '/\?/d' \
  | sed '/\*/d' \
  | sed '/\!/d' \
  | sed '/\&/d' \
  | sed '/\$/d' \
  | sed '/\t/d' \
  | sed '/#/d' \
  | sed '/:/d' \
  | sed '/</d' \
  | sed '/^%/d' \
  | sed '/^$/d' \
  | sort -u \
  > ../data/http_url_enum

# common www dirs
cat ${d}/raft-large-directories.txt \
  | sed '/ /d' \
  | sed '/^$/d' \
  > ../data/http_dir

# files for recursive scan
cat ../data/http_url_enum \
  | grep -v '/' \
  | grep -v '^\.$' \
  | grep -v '^\.\.$' \
  > ../data/http_url_enum_rec_file

# users for web login testing
cat << EOF > ../data/weblogin_user
a adm admin administrator anonymous default ftp ftpuser guest httpadmin info
localadmin none root supervisor test uploader user user1 webserver
EOF
sed -i 's| |\n|g' ../data/weblogin_user

# passwords for web login testing
head -n 2000 "${LIST_DIR}/Passwords/xato-net-10-million-passwords-10000.txt" \
  > ../data/weblogin_pass

# test data for fuff fuzzing
> ../data/ffuf_testlist
for i in $(seq 0 15); do
  printf "x%x\n" $i >> ../data/ffuf_testlist
done


# common locations of files on Windows
# ------------------------------------

cat << EOF > ../data/files_win
c:/boot.ini
c:/windows/win.ini
c:/winnt/win.ini
c:/windows/debug/netsetup.log
c:/windows/system32/drivers/etc/hosts
c:/windows/windowsupdate.log
index.html
index.php
home.html
home.php
about.html
about.php
admin.html
admin.php
EOF

cat /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-windows.txt \
  | tr '[A-Z]' '[a-z]' \
  | sort -u \
  | grep -vF -e '{'  -e '}' \
  | grep -vF 'c:/boot.ini' \
  | grep -vF 'c:/windows/win.ini' \
  | grep -vF 'c:/winnt/win.ini' \
  | grep -vF 'c:/windows/windowsupdate.log' \
  | grep -vF 'c:/windows/system32/drivers/etc/hosts' \
  | grep -vF 'c:/windows/debug/netsetup.log' \
  >> ../data/files_win

cat << EOF >> ../data/files_win
c:/users/\${VAR}/.ssh/id_rsa
c:/users/\${VAR}/.ssh/id_rsa.pub
c:/users/\${VAR}/.ssh/id_dsa
c:/users/\${VAR}/.ssh/id_dsa.pub
c:/users/\${VAR}/.ssh/id_ecdsa
c:/users/\${VAR}/.ssh/id_ecdsa.pub
c:/users/\${VAR}/.ssh/id_ecdsa_sk
c:/users/\${VAR}/.ssh/id_ecdsa_sk.pub
c:/users/\${VAR}/.ssh/id_ed25519
c:/users/\${VAR}/.ssh/id_ed25519.pub
c:/users/\${VAR}/.ssh/id_ed25519_sk
c:/users/\${VAR}/.ssh/id_ed25519_sk.pub
c:/users/\${VAR}/ntuser.dat
c:/users/\${VAR}/desktop/user
c:/users/\${VAR}/desktop/flag
c:/users/\${VAR}/desktop/user.txt
c:/users/\${VAR}/desktop/flag.txt
c:/users/\${VAR}/documents/user
c:/users/\${VAR}/documents/flag
c:/users/\${VAR}/documents/user.txt
c:/users/\${VAR}/documents/flag.txt
EOF

# user name list
# --------------

cat ${LIST_DIR}/Usernames/Names/names.txt \
  ${LIST_DIR}/Usernames/Names/familynames-usa-top1000.txt \
  ${LIST_DIR}/Usernames/Names/malenames-usa-top1000.txt \
  ${LIST_DIR}/Usernames/cirt-default-usernames.txt \
  ${LIST_DIR}/Usernames/top-usernames-shortlist.txt \
  | sed 's/[^[:print:]]//' \
  | grep -vi 'username' \
  | grep -vi '^the$' \
  | grep -vF '!' \
  | grep -vF '*' \
  | grep -vF '$' \
  | grep -vF '%' \
  | grep -vF '#' \
  | grep -vF '&' \
  | grep -vF '@' \
  | grep -vF '(' \
  | grep -vF ')' \
  | grep -vF '<' \
  | grep -vF '>' \
  | grep -vF '[' \
  | grep -vF ']' \
  | grep -vF '{' \
  | grep -vF '}' \
  | grep -vF '/' \
  | grep -vF '\\' \
  | grep -vF '^' \
  | grep -vF "'" \
  | grep -vF '"' \
  | grep -vF ':' \
  | grep -vF '.' \
  | grep -vF ',' \
  | grep -vF '~' \
  | grep -v -- '^-' \
  | grep -v -- '-$' \
  | grep -v '^[0-9]' \
  > ../data/usernames.tmp

echo default >> ../data/usernames.tmp

cat ../data/usernames.tmp \
  | tr '[A-Z]' '[a-z]' \
  | sed 's/.*/\u&/' \
  > ../data/usernames.tmp2

cat ../data/usernames.tmp \
  | tr '[A-Z]' '[a-z]' \
  > ../data/usernames.tmp3

cat ../data/usernames.tmp \
  | tr '[a-z]' '[A-Z]' \
  > ../data/usernames.tmp4

cat ../data/usernames.tmp* | sort -u > ../data/usernames
rm ../data/usernames.tmp*


# nmap port lists
# ---------------

# nmap port split is not used currently by sectest, keeping it just in case

sort -r -k3 /usr/share/nmap/nmap-services \
  | grep -v '^#' \
  | grep '/tcp	' \
  | head -n10000 \
  | sed 's|\t0\..*|\t0.000000|' \
  > ../data/nmap_servicedb_tcp_init_1

# add missing ports from 1-10000 range

cut -f2 ../data/nmap_servicedb_tcp_init_1 \
  > ../data/nmap_servicedb_tcp_init_1_tmp

seq -f '%f/tcp' 1 10000 \
  | sed 's|\.000000||' \
  > ../data/nmap_servicedb_tcp_init_1_add

grep -vxFf ../data/nmap_servicedb_tcp_init_1_tmp \
  ../data/nmap_servicedb_tcp_init_1_add \
    | sed 's|^|custom	|' \
    | sed 's|$|	0.000000|' \
    >> ../data/nmap_servicedb_tcp_init_1

# prepare ports for the second tcp init run

cut -f2 ../data/nmap_servicedb_tcp_init_1 \
  > ../data/nmap_servicedb_tcp_init_1_tmp

seq -f '%f/tcp' 1 65535 \
  | sed 's|\.000000||' \
  > ../data/nmap_servicedb_tcp_init_2_tmp

grep -vxFf ../data/nmap_servicedb_tcp_init_1_tmp \
  ../data/nmap_servicedb_tcp_init_2_tmp \
    | sed 's|^|custom	|' \
    | sed 's|$|	0.000000|' \
    > ../data/nmap_servicedb_tcp_init_2

rm ../data/nmap_servicedb_tcp_init_*_{tmp,add}

# prepare ports for the first udp init run

sort -r -k3 /usr/share/nmap/nmap-services \
  | grep -v '^#' \
  | grep '/udp	' \
  | head -n1000 \
  | sed 's|\t0\..*|\t0.000000|' \
  > ../data/nmap_servicedb_udp_init_1 || :

# prepare ports for the second udp init run

sort -r -k3 /usr/share/nmap/nmap-services \
  | grep -v '^#' \
  | grep '/udp	' \
  | head -n11000 \
  | sed 's|\t0\..*|\t0.000000|' \
  > ../data/nmap_servicedb_udp_init_2_tmp || :

grep -vxFf ../data/nmap_servicedb_udp_init_1 \
  ../data/nmap_servicedb_udp_init_2_tmp \
    > ../data/nmap_servicedb_udp_init_2

rm ../data/nmap_servicedb_udp_init_*_tmp

echo done.

